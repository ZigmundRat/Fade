ConfigLed(0, "RGB", 33, 13)

func AngleToRGB(angleInDegrees)
  //Pl(angleInDegrees)  
  
  brightness = 1.0
  if (angleInDegrees <= 120)    
    temp = angleInDegrees / 120 * brightness 
    value = {temp, 0, brightness - temp}    
  elseif (angleInDegrees <= 240)   
    temp = (angleInDegrees-120) / 120 * brightness 
    value = {brightness - temp, temp, 0}    
  else    
    temp = (angleInDegrees-240) / 120 * brightness 
    value = {0, brightness - temp, temp}    
  endif
  RETURN value
endfunc

func DoChunk(chunk, offset, angle)
  //Pl("DoChunk")
  angle = angle + offset
  rgb = AngleToRGB(angle % 360)
  //rgb = {1, 2, 3}
  //Pl(rgb)
  start = chunk * 3
  D(3, start, rgb)
  D(3, start + 1, rgb)
  D(3, start + 2, rgb)
  
endfunc

func MainHorizontal()
  
  //Pl("hello")
  for angle 0:359:5
    Pl(angle)
    DoChunk(0, 30, angle)
    DoChunk(1, 60, angle)
    DoChunk(2, 90, angle)
    DoChunk(3, 120, angle)
    DoChunk(4, 150, angle)
    DoChunk(5, 90, angle)
    DoChunk(6, 45, angle)
    DoChunk(7, 135, angle)
    A(3)
  endfor     
endfunc

func MainVertical()
  
  //Pl("hello")
  for angle 0:359:5
    Pl(angle)
    DoChunk(0, 0, angle)
    DoChunk(1, 0, angle)
    DoChunk(2, 0, angle)
    DoChunk(3, 00, angle)
    DoChunk(4, 0, angle)
    DoChunk(5, 30, angle)
    DoChunk(6, 45, angle)
    DoChunk(7, 45, angle)
    A(3)
  endfor     
endfunc


for count 0:1
  P(".")
  MainHorizontal()
  MainVertical()
endfor            
